@model Primera.Models.Pago

@{
    ViewData["Title"] = "Registrar Pago";
}

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Registrar Pago</h3>
        </div>

        <div class="card-body">

            @if (TempData["MensajeExito"] != null)
            {
                <div class="alert alert-success">@TempData["MensajeExito"]</div>
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label asp-for="Id_Ticket" class="form-label"></label>
                    <select asp-for="Id_Ticket" class="form-select" asp-items="ViewBag.Id_Ticket" id="ticketSelect">
                        <option value="">-- Seleccione un ticket --</option>
                    </select>
                    <span asp-validation-for="Id_Ticket" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="FechaPago" class="form-label"></label>
                    <input asp-for="FechaPago" type="datetime-local" class="form-control" id="fechaPago"
                           value="@(
                           Model.FechaPago == default(DateTime)
                           ? DateTime.Now.ToString("yyyy-MM-ddTHH:mm")
                           : Model.FechaPago.ToString("yyyy-MM-ddTHH:mm")
                                                      )" />
                    <span asp-validation-for="FechaPago" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="MontoPago" class="form-label"></label>
                    <input asp-for="MontoPago" class="form-control" type="number" step="0.01" readonly id="montoPago" />
                    <span asp-validation-for="MontoPago" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="MetodoPago" class="form-label"></label>
                    <select asp-for="MetodoPago" class="form-select">
                        <option value="">-- Seleccione un método --</option>
                        <option value="Efectivo">Efectivo</option>
                        <option value="Tarjeta">Tarjeta</option>
                        <option value="Transferencia">Transferencia</option>
                    </select>
                    <span asp-validation-for="MetodoPago" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="EstadoPago" class="form-label"></label>
                    <select asp-for="EstadoPago" class="form-select">
                        <option value="">-- Seleccione estado --</option>
                        <option value="Pendiente">Pendiente</option>
                        <option value="Pagado">Pagado</option>
                        <option value="Cancelado">Cancelado</option>
                    </select>
                    <span asp-validation-for="EstadoPago" class="text-danger"></span>
                </div>

                <div class="mt-3">
                    <button type="submit" name="accion" value="guardar" class="btn btn-primary">
                        Guardar Pago
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">Volver a la lista</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const tickets = @Html.Raw(ViewBag.TicketsJson);
        const selectTicket = document.getElementById("ticketSelect");
        const inputFechaPago = document.getElementById("fechaPago");
        const inputMontoPago = document.getElementById("montoPago");

        function calcularMonto() {
            const ticketId = parseInt(selectTicket.value);
            const fechaPagoStr = inputFechaPago.value;

            if (!ticketId || !fechaPagoStr) {
                inputMontoPago.value = "0.00";
                return;
            }

            const ticket = tickets.find(t => t.id === ticketId);
            if (!ticket) return;

            const entrada = new Date(ticket.entrada);
            const salida = new Date(fechaPagoStr);

            let horas = (salida - entrada) / (1000 * 60 * 60); // en horas
            if (horas < 0) horas = 0;
            const horasRedondeadas = Math.ceil(horas);

            const monto = horasRedondeadas * ticket.monto;
            inputMontoPago.value = monto.toFixed(2);
        }

        selectTicket.addEventListener("change", calcularMonto);
        inputFechaPago.addEventListener("change", calcularMonto);
    </script>
}
