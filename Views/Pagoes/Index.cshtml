@model IEnumerable<Primera.Models.Pago>

@{
    ViewData["Title"] = "Pagos";
}

<h1>Pagos</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Crear Nuevo Pago
    </a>
</p>


<input type="text" id="filterInput" placeholder="Filtrar por ticket, método o estado..." class="form-control mb-3" />

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-3 ticket-card">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h5 class="card-title">Ticket: @item.Ticket.NoPlaca</h5>
                    <p class="card-text"><strong>Monto:</strong> @item.MontoPago.ToString("C")</p>
                    <p class="card-text"><strong>Fecha:</strong> @item.FechaPago.ToString("yyyy-MM-dd")</p>
                    <p class="card-text"><strong>Método:</strong> @item.MetodoPago</p>
                    <p class="card-text"><strong>Estado:</strong> @item.EstadoPago</p>
                </div>
                <div class="card-footer d-flex justify-content-between flex-wrap">
                    <a asp-action="Edit" asp-route-id="@item.Id_Pago" class="btn btn-sm btn-primary mb-1">
                        <i class="bi bi-pencil"></i> Editar
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id_Pago" class="btn btn-sm btn-success mb-1">
                        <i class="bi bi-eye"></i> Detalles
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id_Pago" class="btn btn-sm btn-danger mb-1">
                        <i class="bi bi-trash"></i> Eliminar
                    </a>
                    <button onclick="mostrarTicket(@item.Id_Pago)" class="btn btn-sm btn-info mb-1">
                        <i class="bi bi-printer"></i> Reimprimir
                    </button>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="col-12 text-center">
        <p>No hay pagos registrados.</p>
    </div>
}


<!-- ✅ Modal para vista previa del ticket -->

<div class="modal fade" id="ticketModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width:90mm;">
        <div class="modal-content" style="background:#000000; border-radius:8px; padding:0;" <!-- cambiar fondo -->

            <div class="modal-header p-2">
                <h6 class="modal-title">Vista Previa Ticket</h6>
                <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body p-0" id="ticketContenido"
                 style="width:80mm; margin:auto; padding:0;">
            </div>

            <div class="modal-footer justify-content-center p-2 gap-1">
                <button class="btn btn-success btn-sm" onclick="imprimirTicket()">
                    🖨 Imprimir
                </button>
                <button class="btn btn-primary btn-sm" onclick="descargarPDF()">
                    📥 PDF
                </button>
            </div>

        </div>
    </div>
</div>


<script>
    // ✅ Filtro de tarjetas
    document.getElementById('filterInput').addEventListener('keyup', function () {
        const filter = this.value.toLowerCase();
        document.querySelectorAll('.ticket-card').forEach(card => {
            card.style.display = card.textContent.toLowerCase().includes(filter) ? '' : 'none';
        });
    });

    // ✅ Vista previa con el contenido del ticket
    function mostrarTicket(id) {
        fetch(`/Pagoes/Print/${id}`)
            .then(r => r.text())
            .then(html => {
                const contenido = $(html).find('#ticketDiv').html();
                document.getElementById('ticketContenido').innerHTML = contenido;
                new bootstrap.Modal(document.getElementById('ticketModal')).show();
            });
    }

    // ✅ Imprimir ticket dentro del modal
    function imprimirTicket() {
        const ticket = document.getElementById('ticketContenido').innerHTML;
        const original = document.body.innerHTML;

        document.body.innerHTML = ticket;
        window.print();
        document.body.innerHTML = original;
        location.reload();
    }

    // ✅ Descargar el PDF utilizando la vista Print
     async function descargarPDF() {
        const ticket = document.querySelector("#ticketContenido > div");

        await html2canvas(ticket, { scale: 3 }).then(canvas => {
            const imgData = canvas.toDataURL("~/Imagenes/SIPARKRecibo.png");
            const pdf = new jspdf.jsPDF({
                unit: "mm",
                format: [80, canvas.height * 0.264583]
            });

            pdf.addImage(imgData, "PNG", 0, 0, 80, canvas.height * 0.264583);
            pdf.save("Ticket_SIPARK.pdf");
        });
    }
</script>

<!-- ✅ Librerías necesarias -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<link rel="stylesheet" href="~/css/vehiculos.css" />
